% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enr functions.R
\name{en_kfold_accuracy}
\alias{en_kfold_accuracy}
\title{en_kfold_accuracy function}
\usage{
en_kfold_accuracy(
  ddata,
  response_var,
  mod_alpha,
  mod_lambda = NULL,
  mod_type = "glmnet",
  iter = 100,
  k = 10,
  seed = 123,
  loo = FALSE,
  eq_wt = FALSE,
  type_meas = "deviance",
  lr_cutoff = c(0.5)
)
}
\arguments{
\item{ddata}{data frame containing the data to be modeled}

\item{response_var}{string identifying the name of the outcome variable}

\item{mod_alpha}{the alpha(s) value(s) to be checked. alpha is the ENR blending parameter that governs how much ridge regression (0) and lasso regression (1) will be used.}

\item{mod_lambda}{the lambda(s) to be checked. lambda is the ENR penalty parameter for the ridge portion of the ENR}

\item{mod_type}{the model type to use, default is 'glmnet', also accepts 'glm'}

\item{iter}{the number of iterations to use}

\item{k}{the number of folds to use}

\item{seed}{the seed value for allowing results to be reproduced}

\item{loo}{boolean indicating whether 'leave one out' cross validation should be used}

\item{eq_wt}{boolean indicating whether the 0/1 classes should be balanced with weights. you may want to use this if there is a bad class imbalance}

\item{type_meas}{the 'type measure' which is passed to cv.glmnet that governs its training penalty when tuning lambda. this should match arguments expected in cv.glmnet}

\item{lr_cutoff}{vetor of cutoff values to test/tune for optimization. the default is 'c(.5)' which is to say 'equal distance from all classes' which is typical in standard analyses}
}
\description{
This function calculates the cross validated accuracy of an enr model
}
\examples{
en_kfold_accuracy()
}
\keyword{en_kfold_accuracy}
\keyword{enr}
